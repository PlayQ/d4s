name: Build

on:
  pull_request:
  push:
    paths-ignore:
      README.md
      docs/**
      resources/**
      vuepress/**
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.0.1'
      - uses: rlespinasse/github-slug-action@2.1.1
      - name: Set env
        run: |
          echo BRANCH_TAG=$(git describe --contains | grep v | grep -v '~' | head -n 1 || true) >> $GITHUB_ENV
          echo $BRANCH_TAG
      - name: Cache SBT ivy cache
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-ivy
      - name: Cache SBT
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt
      - name: Cache Coursier
        uses: actions/cache@v1
        with:
          path: ~/.cache/coursier
          key: ${{ runner.os }}-coursier
#      - name: Install Docker
#        run: |
#          sudo apt-get update
#          sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
#          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
#          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
#          sudo apt-get update
#          sudo apt-get install docker-ce
#          sudo rm -rf /var/lib/docker
#          sudo systemctl restart docker.service
#          sudo systemctl status docker
      - name: Build and Test
        env:
          OPENSSL_IV: ${{ secrets.OPENSSL_IV }}
          OPENSSL_KEY: ${{ secrets.OPENSSL_KEY }}
        run: |
          env
          sudo service docker restart
          sudo curl -Lo /usr/local/bin/coursier https://git.io/coursier-cli-linux && sudo chmod +x /usr/local/bin/coursier && \
          ./sbtgen.sc
          COMMAND="sbt +clean +test"
          if [[ "$GITHUB_REF" == refs/heads/develop || "$BRANCH_TAG" =~ ^v.*$ ]] ; then
                      openssl aes-256-cbc -K ${OPENSSL_KEY} -iv ${OPENSSL_IV} -in secrets.tar.enc -out secrets.tar -d
                      tar xvf secrets.tar
                      ln -s .secrets/local.sbt local.sbt
                      COMMAND="$COMMAND +publishSigned"
                      if [[ "$BRANCH_TAG" =~ ^v.*$ ]] ; then
                        COMMAND="$COMMAND sonatypeBundleRelease"
                      fi
                    fi
          echo $COMMAND
          eval $COMMAND
